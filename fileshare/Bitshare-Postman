{
	"info": {
		"_postman_id": "b8ab3027-6a15-40cb-9312-d5f589322dcd",
		"name": "Bitshare: OrcaNet-Tuna's File Sharing API",
		"description": "Bitshare is a decentrailized p2p filesharing platform built on libp2p. This documentation contains information about how to make requests using our API. Use headers and the request body format included in examples.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30898740"
	},
	"item": [
		{
			"name": "PROVIDE_FILE",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.ProvideFile\",\r\n    \"params\": [\r\n        {\r\n            \"file_path\": \"media/test2.txt\",\r\n            \"price\": 3\r\n        }\r\n    ],\r\n    \"id\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/rpc",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"rpc"
					]
				},
				"description": "Make a file available for download at set price\n\n#### Request Body\n\n- Type: Raw\n    \n- Description: JSON object with the following keys:\n    \n    - `jsonrpc` (string): The version of the JSON-RPC protocol. Do not change this.\n        \n    - `method` (string): The method to be invoked. Do not change this.\n        \n    - `params` (array): An array of parameters for the method.\n        \n        - `file_path` (string): The path of the file to be shared.\n            \n        - `price` (number): The price set for the file.\n            \n    - `id` (number): The request identifier."
			},
			"response": [
				{
					"name": "PROVIDE_FILE TEXT",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.ProvideFile\",\r\n    \"params\": [\r\n        {\r\n            \"file_path\": \"media/test.txt\",\r\n            \"price\": 69\r\n        }\r\n    ],\r\n    \"id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/rpc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"rpc"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Tue, 10 Dec 2024 18:30:35 GMT"
						},
						{
							"key": "Content-Length",
							"value": "172"
						}
					],
					"cookie": [],
					"body": "{\n    \"result\": {\n        \"success\": true,\n        \"message\": \"File is now available on OrcaNet\",\n        \"file_hash\": \"8d1987845d9c3ff3129f21d1a2d330312527ec6fd2a873d07e455df95b8e6891\"\n    },\n    \"error\": null,\n    \"id\": 1\n}"
				}
			]
		},
		{
			"name": "STOP_PROVIDING_FILE",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.StopProvidingFile\",\r\n    \"params\": [\r\n        {\r\n            \"file_hash\": \"c5e1064872056c435c0aa2239a3c11bdbb32536615cef6a5a412fdb7e08c5f76\"\r\n        }\r\n    ],\r\n    \"id\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/rpc",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"rpc"
					]
				},
				"description": "Stop Providing a File\n\n#### Request Body\n\n- Type: Raw\n    \n- Description: JSON object with the following keys:\n    \n    - `jsonrpc` (string): The version of the JSON-RPC protocol. Do not change this.\n        \n    - `method` (string): The method to be invoked. Do not change this.\n        \n    - `params` (array): An array of parameters for the method.\n        \n        - `file_hash` (string): The hash of the file to stop providing\n            \n    - `id` (number): The request identifier."
			},
			"response": [
				{
					"name": "PROVIDE_FILE",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.StopProvidingFile\",\r\n    \"params\": [\r\n        {\r\n            \"file_hash\": \"8d1987845d9c3ff3129f21d1a2d330312527ec6fd2a873d07e455df95b8e6891\"\r\n        }\r\n    ],\r\n    \"id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/rpc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"rpc"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Tue, 29 Oct 2024 11:02:29 GMT"
						},
						{
							"key": "Content-Length",
							"value": "99"
						}
					],
					"cookie": [],
					"body": "{\n    \"result\": {\n        \"success\": true,\n        \"message\": \"File is no longer available on OrcaNet\"\n    },\n    \"error\": null,\n    \"id\": 1\n}"
				}
			]
		},
		{
			"name": "RESUME_PROVIDING_FILE",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.ResumeProvidingFile\",\r\n    \"params\": [\r\n        {\r\n            \"file_hash\": \"c5e1064872056c435c0aa2239a3c11bdbb32536615cef6a5a412fdb7e08c5f76\"\r\n        }\r\n    ],\r\n    \"id\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/rpc",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"rpc"
					]
				},
				"description": "Resume providing a file.\n\n#### Request Body\n\n- Type: Raw\n    \n- Description: JSON object with the following keys:\n    \n    - `jsonrpc` (string): The version of the JSON-RPC protocol. Do not change this.\n        \n    - `method` (string): The method to be invoked. Do not change this.\n        \n    - `params` (array): An array of parameters for the method.\n        \n        - `file_hash` (string): The file hash of the file to resume providing\n            \n    - `id` (number): The request identifier."
			},
			"response": [
				{
					"name": "STOP_PROVIDING_FILE Copy",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.ResumeProvidingFile\",\r\n    \"params\": [\r\n        {\r\n            \"file_hash\": \"8d1987845d9c3ff3129f21d1a2d330312527ec6fd2a873d07e455df95b8e6891\"\r\n        }\r\n    ],\r\n    \"id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://host.docker.internal:8081/rpc",
							"protocol": "http",
							"host": [
								"host",
								"docker",
								"internal"
							],
							"port": "8081",
							"path": [
								"rpc"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Tue, 29 Oct 2024 11:02:36 GMT"
						},
						{
							"key": "Content-Length",
							"value": "93"
						}
					],
					"cookie": [],
					"body": "{\n    \"result\": {\n        \"success\": true,\n        \"message\": \"File is now available on OrcaNet\"\n    },\n    \"error\": null,\n    \"id\": 1\n}"
				}
			]
		},
		{
			"name": "GET_UPDATES",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.GetUpdates\",\r\n    \"params\": [],\r\n    \"id\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/rpc",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"rpc"
					]
				},
				"description": "### File Share Service Updates\n\nThis endpoint allows you to retrieve updates for the File Share Service. Call this at regular intervals.\n\n#### Request Body (Don't change)\n\n- **jsonrpc** (string, required): The JSON-RPC protocol version.\n    \n- **method** (string, required): The method to be called, in this case, \"FileShareService.GetUpdates\".\n    \n- **params** (array, required): An array of parameters for the method.\n    \n- **id** (number, required): An identifier established by the client.\n    \n\nExample:\n\n``` json\n{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"FileShareService.GetUpdates\",\n  \"params\": [],\n  \"id\": 1\n}\n\n ```\n\n#### Response\n\nThe response will contain the following fields:\n\n- **result** (object): The result of the method call.\n    \n    - **success** (boolean): Indicates if the operation was successful.\n        \n    - **peer_id** (string): The peer ID.\n        \n    - **multi_addr** (string): The multi address.\n        \n    - **status** (string): The status.\n        \n    - **private_ip** (boolean): Indicates if the IP is private.\n        \n    - **providing** (array): An array of objects containing file information.\n        \n        - **FileName** (string): The name of the file.\n            \n        - **FileSize** (number): The size of the file.\n            \n        - **FileHash** (string): The hash of the file.\n            \n        - **FileExtension** (string): The extension of the file.\n            \n        - **Multiaddress** (string): The multi address of the file.\n            \n        - **PeerID** (string): The peer ID of the file.\n            \n        - **RequestID** (string): The request ID of the file.\n            \n    - **requested_files** (array): An array of requested files.\n        \n    - **downloads** (array): An array of downloaded files.\n        \n- **error** (null): Indicates if an error occurred.\n    \n- **id** (number): The identifier established by the client."
			},
			"response": [
				{
					"name": "GET_UPDATES (Downloads in progress)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.GetUpdates\",\r\n    \"params\": [],\r\n    \"id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://host.docker.internal:8081/rpc",
							"protocol": "http",
							"host": [
								"host",
								"docker",
								"internal"
							],
							"port": "8081",
							"path": [
								"rpc"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Mon, 18 Nov 2024 20:46:27 GMT"
						},
						{
							"key": "Content-Length",
							"value": "1201"
						}
					],
					"cookie": [],
					"body": "{\n    \"result\": {\n        \"success\": true,\n        \"wallet_id\": \"462dfsg46hlgsdjgpo3i5nhdfgsdfg2354\",\n        \"peer_id\": \"12D3KooWAQaSKDbemCmXZVJj7W6tdQob1m6Jd9Pc861DijNyrT8p\",\n        \"multi_addr\": \"/ip4/127.0.0.1/tcp/58005\",\n        \"status\": \"Online\",\n        \"private_ip\": false,\n        \"providing\": [],\n        \"requested_files\": [\n            {\n                \"RequestID\": \"9fc5a708-32f8-45bb-8697-eccbbcb09357\",\n                \"FileHash\": \"8d111b69632d3abc7ee3fd9cd215679c00b91ae6717f3be1bb9f7971bec2b911\",\n                \"RequesterID\": \"12D3KooWAQaSKDbemCmXZVJj7W6tdQob1m6Jd9Pc861DijNyrT8p\",\n                \"RequesterMultiAddress\": \"/ip4/127.0.0.1/tcp/58005\",\n                \"TimeSent\": \"2024-11-18T15:46:05.8443037-05:00\"\n            }\n        ],\n        \"downloads\": [\n            {\n                \"RequestID\": \"9fc5a708-32f8-45bb-8697-eccbbcb09357\",\n                \"FileHash\": \"8d111b69632d3abc7ee3fd9cd215679c00b91ae6717f3be1bb9f7971bec2b911\",\n                \"FileMetaData\": {\n                    \"FileName\": \"bigfile.zip\",\n                    \"FileSize\": 11570148508,\n                    \"FileHash\": \"8d111b69632d3abc7ee3fd9cd215679c00b91ae6717f3be1bb9f7971bec2b911\",\n                    \"FileExtension\": \".zip\",\n                    \"Multiaddress\": \"/ip4/127.0.0.1/tcp/65451\",\n                    \"PeerID\": \"12D3KooWHsGbiL3GeM3SzaMjpk8gKfuAtbY3pR2S2fGovKbkMpFa\",\n                    \"RequestID\": \"9fc5a708-32f8-45bb-8697-eccbbcb09357\"\n                },\n                \"DownloadProgress\": 0.013967907,\n                \"DownloadSpeed\": 8.216798,\n                \"DownloadStart\": \"2024-11-18T15:46:05.8632318-05:00\",\n                \"RemainingTime\": \"22m40s\",\n                \"BytesDownloaded\": 161610752\n            }\n        ]\n    },\n    \"error\": null,\n    \"id\": 1\n}"
				},
				{
					"name": "GET_UPDATES (Download Completed)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.GetUpdates\",\r\n    \"params\": [],\r\n    \"id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/rpc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"rpc"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Wed, 11 Dec 2024 13:42:24 GMT"
						},
						{
							"key": "Content-Length",
							"value": "1229"
						}
					],
					"cookie": [],
					"body": "{\n    \"result\": {\n        \"success\": true,\n        \"peer_id\": \"12D3KooWAQaSKDbemCmXZVJj7W6tdQob1m6Jd9Pc861DijNyrT8p\",\n        \"multi_addr\": \"/ip4/127.0.0.1/tcp/43995\",\n        \"status\": \"Online\",\n        \"private_ip\": false,\n        \"providing\": [],\n        \"requested_files\": [\n            {\n                \"RequestID\": \"e5a0371d-d0a3-49e2-8619-1e700ec6280d\",\n                \"FileHash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\n                \"RequesterID\": \"12D3KooWAQaSKDbemCmXZVJj7W6tdQob1m6Jd9Pc861DijNyrT8p\",\n                \"RequesterMultiAddress\": \"/ip4/127.0.0.1/tcp/43995\",\n                \"TimeSent\": \"2024-12-11T13:37:55.191703566Z\",\n                \"Complete\": true\n            }\n        ],\n        \"downloads\": [\n            {\n                \"RequestID\": \"e5a0371d-d0a3-49e2-8619-1e700ec6280d\",\n                \"FileHash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\n                \"FileMetaData\": {\n                    \"FileName\": \"trace2.pcap\",\n                    \"FileSize\": 2240708644,\n                    \"FileHash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\n                    \"FileExtension\": \".pcap\",\n                    \"Multiaddress\": \"/ip4/127.0.0.1/tcp/46253\",\n                    \"PeerID\": \"12D3KooWHsGbiL3GeM3SzaMjpk8gKfuAtbY3pR2S2fGovKbkMpFa\",\n                    \"Price\": 2,\n                    \"MiningAddress\": \"16tkfiM9dLkkHQv7n4mKhvoKJHUEszt6tQ\",\n                    \"RequestID\": \"e5a0371d-d0a3-49e2-8619-1e700ec6280d\"\n                },\n                \"DownloadProgress\": 1,\n                \"DownloadSpeed\": 12.136211,\n                \"DownloadStart\": \"2024-12-11T13:37:55.214659205Z\",\n                \"RemainingTime\": \"Download Completed\",\n                \"BytesDownloaded\": 2240708644\n            }\n        ]\n    },\n    \"error\": null,\n    \"id\": 1\n}"
				},
				{
					"name": "GET_UPDATES (Multiple Downloads)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.GetUpdates\",\r\n    \"params\": [],\r\n    \"id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/rpc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"rpc"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Wed, 11 Dec 2024 13:55:47 GMT"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "{\n    \"result\": {\n        \"success\": true,\n        \"peer_id\": \"12D3KooWAQaSKDbemCmXZVJj7W6tdQob1m6Jd9Pc861DijNyrT8p\",\n        \"multi_addr\": \"/ip4/127.0.0.1/tcp/43995\",\n        \"status\": \"Online\",\n        \"private_ip\": false,\n        \"providing\": [],\n        \"requested_files\": [\n            {\n                \"RequestID\": \"e5a0371d-d0a3-49e2-8619-1e700ec6280d\",\n                \"FileHash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\n                \"RequesterID\": \"12D3KooWAQaSKDbemCmXZVJj7W6tdQob1m6Jd9Pc861DijNyrT8p\",\n                \"RequesterMultiAddress\": \"/ip4/127.0.0.1/tcp/43995\",\n                \"TimeSent\": \"2024-12-11T13:37:55.191703566Z\",\n                \"Complete\": true\n            },\n            {\n                \"RequestID\": \"1b1db335-e970-4f04-bde8-23614c2782b6\",\n                \"FileHash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\n                \"RequesterID\": \"12D3KooWAQaSKDbemCmXZVJj7W6tdQob1m6Jd9Pc861DijNyrT8p\",\n                \"RequesterMultiAddress\": \"/ip4/127.0.0.1/tcp/43995\",\n                \"TimeSent\": \"2024-12-11T13:44:33.096859686Z\",\n                \"Complete\": true\n            },\n            {\n                \"RequestID\": \"637996e7-2d70-49be-b163-f2d7551a3e18\",\n                \"FileHash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\n                \"RequesterID\": \"12D3KooWAQaSKDbemCmXZVJj7W6tdQob1m6Jd9Pc861DijNyrT8p\",\n                \"RequesterMultiAddress\": \"/ip4/127.0.0.1/tcp/43995\",\n                \"TimeSent\": \"2024-12-11T13:49:10.065448782Z\",\n                \"Complete\": true\n            },\n            {\n                \"RequestID\": \"19fc6de7-226a-41f5-a0ab-aa5dc2eeedaa\",\n                \"FileHash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\n                \"RequesterID\": \"12D3KooWAQaSKDbemCmXZVJj7W6tdQob1m6Jd9Pc861DijNyrT8p\",\n                \"RequesterMultiAddress\": \"/ip4/127.0.0.1/tcp/43995\",\n                \"TimeSent\": \"2024-12-11T13:55:00.730696085Z\",\n                \"Complete\": false\n            },\n            {\n                \"RequestID\": \"b3cb62b6-dcc5-4165-9479-d35626a4c62d\",\n                \"FileHash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\n                \"RequesterID\": \"12D3KooWAQaSKDbemCmXZVJj7W6tdQob1m6Jd9Pc861DijNyrT8p\",\n                \"RequesterMultiAddress\": \"/ip4/127.0.0.1/tcp/43995\",\n                \"TimeSent\": \"2024-12-11T13:55:15.249633391Z\",\n                \"Complete\": false\n            }\n        ],\n        \"downloads\": [\n            {\n                \"RequestID\": \"e5a0371d-d0a3-49e2-8619-1e700ec6280d\",\n                \"FileHash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\n                \"FileMetaData\": {\n                    \"FileName\": \"trace2.pcap\",\n                    \"FileSize\": 2240708644,\n                    \"FileHash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\n                    \"FileExtension\": \".pcap\",\n                    \"Multiaddress\": \"/ip4/127.0.0.1/tcp/46253\",\n                    \"PeerID\": \"12D3KooWHsGbiL3GeM3SzaMjpk8gKfuAtbY3pR2S2fGovKbkMpFa\",\n                    \"Price\": 2,\n                    \"MiningAddress\": \"16tkfiM9dLkkHQv7n4mKhvoKJHUEszt6tQ\",\n                    \"RequestID\": \"e5a0371d-d0a3-49e2-8619-1e700ec6280d\"\n                },\n                \"DownloadProgress\": 1,\n                \"DownloadSpeed\": 12.136211,\n                \"DownloadStart\": \"2024-12-11T13:37:55.214659205Z\",\n                \"RemainingTime\": \"Download Completed\",\n                \"BytesDownloaded\": 2240708644\n            },\n            {\n                \"RequestID\": \"1b1db335-e970-4f04-bde8-23614c2782b6\",\n                \"FileHash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\n                \"FileMetaData\": {\n                    \"FileName\": \"trace2.pcap\",\n                    \"FileSize\": 2240708644,\n                    \"FileHash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\n                    \"FileExtension\": \".pcap\",\n                    \"Multiaddress\": \"/ip4/127.0.0.1/tcp/46253\",\n                    \"PeerID\": \"12D3KooWHsGbiL3GeM3SzaMjpk8gKfuAtbY3pR2S2fGovKbkMpFa\",\n                    \"Price\": 2,\n                    \"MiningAddress\": \"16tkfiM9dLkkHQv7n4mKhvoKJHUEszt6tQ\",\n                    \"RequestID\": \"1b1db335-e970-4f04-bde8-23614c2782b6\"\n                },\n                \"DownloadProgress\": 1,\n                \"DownloadSpeed\": 12.696688,\n                \"DownloadStart\": \"2024-12-11T13:44:33.270580285Z\",\n                \"RemainingTime\": \"Download Completed\",\n                \"BytesDownloaded\": 2240708644\n            },\n            {\n                \"RequestID\": \"637996e7-2d70-49be-b163-f2d7551a3e18\",\n                \"FileHash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\n                \"FileMetaData\": {\n                    \"FileName\": \"trace2.pcap\",\n                    \"FileSize\": 2240708644,\n                    \"FileHash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\n                    \"FileExtension\": \".pcap\",\n                    \"Multiaddress\": \"/ip4/127.0.0.1/tcp/46253\",\n                    \"PeerID\": \"12D3KooWHsGbiL3GeM3SzaMjpk8gKfuAtbY3pR2S2fGovKbkMpFa\",\n                    \"Price\": 2,\n                    \"MiningAddress\": \"16tkfiM9dLkkHQv7n4mKhvoKJHUEszt6tQ\",\n                    \"RequestID\": \"637996e7-2d70-49be-b163-f2d7551a3e18\"\n                },\n                \"DownloadProgress\": 1,\n                \"DownloadSpeed\": 13.818787,\n                \"DownloadStart\": \"2024-12-11T13:49:10.082411659Z\",\n                \"RemainingTime\": \"Download Completed\",\n                \"BytesDownloaded\": 2240708644\n            },\n            {\n                \"RequestID\": \"19fc6de7-226a-41f5-a0ab-aa5dc2eeedaa\",\n                \"FileHash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\n                \"FileMetaData\": {\n                    \"FileName\": \"trace2.pcap\",\n                    \"FileSize\": 2240708644,\n                    \"FileHash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\n                    \"FileExtension\": \".pcap\",\n                    \"Multiaddress\": \"/ip4/127.0.0.1/tcp/46253\",\n                    \"PeerID\": \"12D3KooWHsGbiL3GeM3SzaMjpk8gKfuAtbY3pR2S2fGovKbkMpFa\",\n                    \"Price\": 2,\n                    \"MiningAddress\": \"16tkfiM9dLkkHQv7n4mKhvoKJHUEszt6tQ\",\n                    \"RequestID\": \"19fc6de7-226a-41f5-a0ab-aa5dc2eeedaa\"\n                },\n                \"DownloadProgress\": 0.17601426,\n                \"DownloadSpeed\": 6.9287715,\n                \"DownloadStart\": \"2024-12-11T13:55:00.749106268Z\",\n                \"RemainingTime\": \"4m53s\",\n                \"BytesDownloaded\": 394396672\n            },\n            {\n                \"RequestID\": \"b3cb62b6-dcc5-4165-9479-d35626a4c62d\",\n                \"FileHash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\n                \"FileMetaData\": {\n                    \"FileName\": \"trace2.pcap\",\n                    \"FileSize\": 2240708644,\n                    \"FileHash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\n                    \"FileExtension\": \".pcap\",\n                    \"Multiaddress\": \"/ip4/127.0.0.1/tcp/46253\",\n                    \"PeerID\": \"12D3KooWHsGbiL3GeM3SzaMjpk8gKfuAtbY3pR2S2fGovKbkMpFa\",\n                    \"Price\": 2,\n                    \"MiningAddress\": \"16tkfiM9dLkkHQv7n4mKhvoKJHUEszt6tQ\",\n                    \"RequestID\": \"b3cb62b6-dcc5-4165-9479-d35626a4c62d\"\n                },\n                \"DownloadProgress\": 0.09209658,\n                \"DownloadSpeed\": 6.4401526,\n                \"DownloadStart\": \"2024-12-11T13:55:15.488299744Z\",\n                \"RemainingTime\": \"5m23s\",\n                \"BytesDownloaded\": 206361600\n            }\n        ]\n    },\n    \"error\": null,\n    \"id\": 1\n}"
				},
				{
					"name": "GET_UPDATES (File Provided)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.GetUpdates\",\r\n    \"params\": [],\r\n    \"id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/rpc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"rpc"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Wed, 11 Dec 2024 19:23:30 GMT"
						},
						{
							"key": "Content-Length",
							"value": "675"
						}
					],
					"cookie": [],
					"body": "{\n    \"result\": {\n        \"success\": true,\n        \"peer_id\": \"12D3KooWHsGbiL3GeM3SzaMjpk8gKfuAtbY3pR2S2fGovKbkMpFa\",\n        \"multi_addr\": \"/ip4/127.0.0.1/tcp/40973\",\n        \"status\": \"Online\",\n        \"private_ip\": false,\n        \"providing\": [\n            {\n                \"FileName\": \"test2.txt\",\n                \"FileSize\": 17,\n                \"FileHash\": \"c5e1064872056c435c0aa2239a3c11bdbb32536615cef6a5a412fdb7e08c5f76\",\n                \"FileExtension\": \".txt\",\n                \"Multiaddress\": \"/ip4/127.0.0.1/tcp/40973\",\n                \"PeerID\": \"12D3KooWHsGbiL3GeM3SzaMjpk8gKfuAtbY3pR2S2fGovKbkMpFa\",\n                \"Price\": 3,\n                \"MiningAddress\": \"16tkfiM9dLkkHQv7n4mKhvoKJHUEszt6tQ\",\n                \"RequestID\": \"\",\n                \"Provided\": false\n            }\n        ],\n        \"is_file_provided\": {\n            \"c5e1064872056c435c0aa2239a3c11bdbb32536615cef6a5a412fdb7e08c5f76\": false\n        },\n        \"requested_files\": [],\n        \"downloads\": []\n    },\n    \"error\": null,\n    \"id\": 1\n}"
				}
			]
		},
		{
			"name": "GET_FILE",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.GetFile\",\r\n    \"params\": [\r\n        {\r\n            \"file_hash\": \"01dbf152ff052a370e44f670aaebffd0648e6ada9298e8881284d1217c254591\",\r\n            \"peer_id\": \"12D3KooWEAJJBuis6t6PjUHmfzxdToPwWTmYMCLozPumsEJZ2enm\"\r\n        }\r\n    ],\r\n    \"id\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/rpc",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"rpc"
					]
				},
				"description": "Download a file from OrcaNet by a file hash. Sending this request is also confirms the user wants to proceed with the payment.\n\n#### Request Body\n\n- Type: Raw\n    \n- Description: JSON object with the following keys:\n    \n    - `jsonrpc` (string): The version of the JSON-RPC protocol. Do not change this.\n        \n    - `method` (string): The method to be invoked. Do not change this.\n        \n    - `params` (array): An array of parameters for the method.\n        \n        - `file_hash` (string): The hash of the file to be downloaded\n            \n        - peer_id (string): The peer_id of a node providing the file.\n            \n    - `id` (number): The request identifier."
			},
			"response": [
				{
					"name": "GET_FILE (Success)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.GetFile\",\r\n    \"params\": [\r\n        {\r\n            \"file_hash\": \"c5e1064872056c435c0aa2239a3c11bdbb32536615cef6a5a412fdb7e08c5f76\",\r\n            \"peer_id\": \"12D3KooWHsGbiL3GeM3SzaMjpk8gKfuAtbY3pR2S2fGovKbkMpFa\"\r\n        }\r\n    ],\r\n    \"id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/rpc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"rpc"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Tue, 10 Dec 2024 21:56:38 GMT"
						},
						{
							"key": "Content-Length",
							"value": "293"
						}
					],
					"cookie": [],
					"body": "{\n    \"result\": {\n        \"success\": true,\n        \"message\": \"File dowloaded successfully\",\n        \"request_id\": \"9313593d-c814-47fa-9697-aa636c951dc7\",\n        \"file_hash\": \"c5e1064872056c435c0aa2239a3c11bdbb32536615cef6a5a412fdb7e08c5f76\",\n        \"txid\": \"8330d10448713ae101781abf1ac52875cc473cb32028b3e51d144eb46afb61b1\"\n    },\n    \"error\": null,\n    \"id\": 1\n}"
				},
				{
					"name": "GET_FILE (Error Example)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.GetFile\",\r\n    \"params\": [\r\n        {\r\n            \"file_hash\": \"c5e1064872056c435c0aa2239a3c11bdbb32536615cef6a5a412fdb7e08c5f76\",\r\n            \"peer_id\": \"12D3KooWHsGbiL3GeM3SzaMjpk8gKfuAtbY3pR2S2fGovKbkMpFa\"\r\n        }\r\n    ],\r\n    \"id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/rpc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"rpc"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Wed, 11 Dec 2024 19:45:14 GMT"
						},
						{
							"key": "Content-Length",
							"value": "295"
						}
					],
					"cookie": [],
					"body": "{\n    \"result\": null,\n    \"error\": \"failed to connect to peer through relay: failed to dial: failed to dial 12D3KooWHsGbiL3GeM3SzaMjpk8gKfuAtbY3pR2S2fGovKbkMpFa: all dials failed\\n  * [/ip4/130.245.173.221/tcp/4001/p2p/12D3KooWDpJ7As7BWAwRMfu1VU2WCqNjvq387JEYKDBj4kx6nXTN/p2p-circuit] dial backoff\",\n    \"id\": 1\n}"
				}
			]
		},
		{
			"name": "GET_FILE_META_DATA",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.GetFileMetaData\",\r\n    \"params\": [\r\n        {\r\n            \"file_hash\": \"01dbf152ff052a370e44f670aaebffd0648e6ada9298e8881284d1217c254591\",\r\n            \"peer_id\": \"12D3KooWEAJJBuis6t6PjUHmfzxdToPwWTmYMCLozPumsEJZ2enm\"\r\n        }\r\n    ],\r\n    \"id\": 1\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/rpc",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"rpc"
					]
				},
				"description": "Get the metadata, pricing, and status information of a file.\n\n#### Request Body\n\n- Type: Raw\n    \n- Description: JSON object with the following keys:\n    \n    - `jsonrpc` (string): The version of the JSON-RPC protocol. Do not change this.\n        \n    - `method` (string): The method to be invoked. Do not change this.\n        \n    - `params` (array): An array of parameters for the method.\n        \n        - `file_hash` (string): The path of the file to be shared.\n            \n        - peer_id (string): The peer_id providing the file.\n            \n    - `id` (number): The request identifier."
			},
			"response": [
				{
					"name": "GET_FILE_META_DATA (Error Example)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.GetFileMetaData\",\r\n    \"params\": [\r\n        {\r\n            \"file_hash\":\"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\",\r\n            \"peer_id\": \"12D3KooWHsGbiL3GeM3SzaMjpk8gKfuAtbY3pRaS2fGovKbkMpFa\"\r\n        }\r\n    ],\r\n    \"id\": 1\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/rpc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"rpc"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Wed, 11 Dec 2024 13:51:34 GMT"
						},
						{
							"key": "Content-Length",
							"value": "332"
						}
					],
					"cookie": [],
					"body": "{\n    \"result\": null,\n    \"error\": \"failed to connect to peer through relay: failed to dial: failed to dial 12D3KooWHsGbiL3GeM3SzaMjpk8gKfuAtbY3pRaS2fGovKbkMpFa: all dials failed\\n  * [/ip4/130.245.173.221/tcp/4001/p2p/12D3KooWDpJ7As7BWAwRMfu1VU2WCqNjvq387JEYKDBj4kx6nXTN/p2p-circuit] error opening relay circuit: NO_RESERVATION (204)\",\n    \"id\": 1\n}"
				},
				{
					"name": "GET_FILE_META_DATA (Success)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.GetFileMetaData\",\r\n    \"params\": [\r\n        {\r\n            \"file_hash\":\"c5e1064872056c435c0aa2239a3c11bdbb32536615cef6a5a412fdb7e08c5f76\",\r\n            \"peer_id\": \"12D3KooWHsGbiL3GeM3SzaMjpk8gKfuAtbY3pR2S2fGovKbkMpFa\"\r\n        }\r\n    ],\r\n    \"id\": 1\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/rpc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"rpc"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Wed, 11 Dec 2024 19:33:19 GMT"
						},
						{
							"key": "Content-Length",
							"value": "405"
						}
					],
					"cookie": [],
					"body": "{\n    \"result\": {\n        \"success\": true,\n        \"file_meta_data\": {\n            \"FileName\": \"test2.txt\",\n            \"FileSize\": 17,\n            \"FileHash\": \"c5e1064872056c435c0aa2239a3c11bdbb32536615cef6a5a412fdb7e08c5f76\",\n            \"FileExtension\": \".txt\",\n            \"Multiaddress\": \"/ip4/127.0.0.1/tcp/40973\",\n            \"PeerID\": \"12D3KooWHsGbiL3GeM3SzaMjpk8gKfuAtbY3pR2S2fGovKbkMpFa\",\n            \"Price\": 3,\n            \"MiningAddress\": \"16tkfiM9dLkkHQv7n4mKhvoKJHUEszt6tQ\",\n            \"RequestID\": \"\",\n            \"Provided\": true\n        }\n    },\n    \"error\": null,\n    \"id\": 1\n}"
				}
			]
		},
		{
			"name": "PAUSE_DOWNLOAD",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.PauseDownload\",\r\n    \"params\": [\r\n        {\r\n            \"request_id\": \"b3cb62b6-dcc5-4165-9479-d35626a4c62d\"\r\n        }\r\n    ],\r\n    \"id\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://host.docker.internal:8081/rpc",
					"protocol": "http",
					"host": [
						"host",
						"docker",
						"internal"
					],
					"port": "8081",
					"path": [
						"rpc"
					]
				},
				"description": "Pause a download associated with a request id\n\n#### Request Body\n\n- Type: Raw\n    \n- Description: JSON object with the following keys:\n    \n    - `jsonrpc` (string): The version of the JSON-RPC protocol. Do not change this.\n        \n    - `method` (string): The method to be invoked. Do not change this.\n        \n    - `params` (array): An array of parameters for the method.\n        \n        - request_id (string): The request id of the request to pause a download for.\n            \n    - `id` (number): The request identifier."
			},
			"response": [
				{
					"name": "PAUSE_DOWNLOAD (Error)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.PauseDownload\",\r\n    \"params\": [\r\n        {\r\n            \"request_id\": \"b3cb62b6-dcc5-4165-9479-d35626a4c62d\"\r\n        }\r\n    ],\r\n    \"id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://host.docker.internal:8081/rpc",
							"protocol": "http",
							"host": [
								"host",
								"docker",
								"internal"
							],
							"port": "8081",
							"path": [
								"rpc"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Wed, 11 Dec 2024 13:59:08 GMT"
						},
						{
							"key": "Content-Length",
							"value": "111"
						}
					],
					"cookie": [],
					"body": "{\n    \"result\": null,\n    \"error\": \"transaction does not exist for requestID b3cb62b6-dcc5-4165-9479-d35626a4c6ad\",\n    \"id\": 1\n}"
				}
			]
		},
		{
			"name": "GET_PROVIDERS",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.GetProviders\",\r\n    \"params\": [\r\n        {\r\n            \"file_hash\": \"4f218aa0a9ec1235c74b6ab94188b0a06bc1aca127bc930235f308addd31c1d5\"\r\n        }\r\n    ],\r\n    \"id\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/rpc",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"rpc"
					]
				},
				"description": "Get a list of peerID of providers of a file.\n\n#### Request Body\n\n- Type: Raw\n    \n- Description: JSON object with the following keys:\n    \n    - `jsonrpc` (string): The version of the JSON-RPC protocol. Do not change this.\n        \n    - `method` (string): The method to be invoked. Do not change this.\n        \n    - `params` (array): An array of parameters for the method.\n        \n        - `file_hash` (string): The path of the file to get providers of\n            \n    - `id` (number): The request identifier."
			},
			"response": [
				{
					"name": "GET_PROVIDERS (Success)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.GetProviders\",\r\n    \"params\": [\r\n        {\r\n            \"file_hash\": \"8d1987845d9c3ff3129f21d1a2d330312527ec6fd2a873d07e455df95b8e6891\"\r\n        }\r\n    ],\r\n    \"id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://host.docker.internal:8081/rpc",
							"protocol": "http",
							"host": [
								"host",
								"docker",
								"internal"
							],
							"port": "8081",
							"path": [
								"rpc"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Mon, 11 Nov 2024 21:29:46 GMT"
						},
						{
							"key": "Content-Length",
							"value": "175"
						}
					],
					"cookie": [],
					"body": "{\n    \"result\": {\n        \"success\": true,\n        \"providers\": [\n            \"\",\n            \"12D3KooWHsGbiL3GeM3SzaMjpk8gKfuAtbY3pR2S2fGovKbkMpFa\",\n            \"12D3KooWAQaSKDbemCmXZVJj7W6tdQob1m6Jd9Pc861DijNyrT8p\"\n        ]\n    },\n    \"error\": null,\n    \"id\": 1\n}"
				}
			]
		},
		{
			"name": "RESUME_DOWNLOAD",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"FileShareService.ResumeDownload\",\r\n    \"params\": [\r\n        {\r\n            \"request_id\": \"bd9d0abf-0646-4ec2-a79b-6a99aa53735c\"\r\n        }\r\n    ],\r\n    \"id\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://host.docker.internal:8081/rpc",
					"protocol": "http",
					"host": [
						"host",
						"docker",
						"internal"
					],
					"port": "8081",
					"path": [
						"rpc"
					]
				},
				"description": "Resume a paused download associated with a download.\n\n#### Request Body\n\n- Type: Raw\n    \n- Description: JSON object with the following keys:\n    \n    - `jsonrpc` (string): The version of the JSON-RPC protocol. Do not change this.\n        \n    - `method` (string): The method to be invoked. Do not change this.\n        \n    - `params` (array): An array of parameters for the method.\n        \n        - `request_id` (string): The request ID to resume a download.\n            \n    - `id` (number): The request identifier."
			},
			"response": []
		}
	]
}